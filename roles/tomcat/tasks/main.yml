- name: Install Java 
  package:
    name: java 
    state: installed 
- name: Get Tomcat Directory 
  shell: echo {{TOMCAT_URL}} | awk -F / '{print $NF}' | sed -e 's/.tar.gz//'
  register: out 
- name: Define Tomcat Directory 
  set_fact:
    TOMCAT_DIR: "/opt/{{out.stdout}}"
- name: Check Existing TOmcat 
  stat: 
    path: "{{TOMCAT_DIR}}"
  register: out 
- name: Download Tomcat 
  unarchive:
    src: "{{TOMCAT_URL}}" 
    dest: /opt
    remote_src: yes
  when: out.stat.exists == false
  
- name: Find the files 
  find:
    paths: "{{TOMCAT_DIR}}/webapps"
    file_type: any
  register: out 
- name: Remove the files 
  file:
    path: "{{item.path}}"
    state: absent
  loop: "{{out.files}}"
  
- name: Download WAR file 
  get_url:
    url: "{{WAR_URL}}"
    dest: "{{TOMCAT_DIR}}/webapps/student.war"
- name: Download JAR File 
  get_url:
    url: "{{JAR_URL}}"
    dest: "{{TOMCAT_DIR}}/lib/mysql-connector-java.jar" 
- name:  Copy Context.xml file 
  template: 
    src: context.xml.j2 
    dest: "{{TOMCAT_DIR}}/conf/context.xml"
- name: Check tomcat is running or not 
  shell: ps -ef | grep java | grep -v grep 
  register: out
  ignore_errors: True
- name: Stop Tomcat 
  shell: "nohup {{TOMCAT_DIR}}/bin/shutdown.sh"
  when: out.rc == 0
- name: Start Tomcat 
  shell: "nohup {{TOMCAT_DIR}}/bin/startup.sh"
